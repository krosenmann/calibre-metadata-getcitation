#+TITLE: calibre-metadata-getcitation

* calibre-metadata-getcitation

A citation fetcher plugin for scholarly articles. If you use Calibre to organize research articles ("papers"), this plugin aims to allow you to fetch article metadata.

You need to input identifying information in the =Ids= field for the entry, then click "Download metadata".

** an example

*** add a new article

[[./doc/img/ss-001.png]]

[[http://i.imgur.com/Puxzm.png]]

*** press 'e', here's how the metadata looks

[[./doc/img/ss-002.png]]

[[http://i.imgur.com/ek9h4.png]]

*** fill in the =Ids= field and click =Download metadata=

[[./doc/img/ss-003.png]]

[[http://i.imgur.com/eaxsj.png]]

*** here's our result

[[./doc/img/ss-004.png]]

[[http://i.imgur.com/lGoAD.png]]

*** apply

[[./doc/img/ss-005.png]]

[[http://i.imgur.com/eprMZ.png]]

** supported lookup

*** PubMed - provided by Bio.Entrez

*** doi lookup - via crossref


** TODO citation/author format

   Issue: different sources don't provide the same format for authors, e.g. you may get abbreviations with or without dots; Calibre treats these differently, so you end up with multiple folders from the same author.

* setup

  work in progress. does not work out of the box without a bit of setup in your machine.

** dependencies

*** non-optional

    - =pip install lxml=

    this provides xpath lookup through the return xml structure. it seems to be rather heavy... might move to minidom after we get a good idea about the xml return structure. Also consider =xmltodict=, which seems more lightweight.

*** calibre required columns

    some of these are custom columns that you'll need to add:

    - issue
    - abstract
    - keywords
    - volume
    - pages

*** for development

   these are for testing and probably not useful for the actual plugin

=pip install termcolor see twisted xmltodict PyICU=

I don't want to have to bundle things like BioPython... so it will
detect whether you have them installed

you will also need either a system-wide install of PyQt if you want to test from the command line without launching Calibre. I'm not listing it as a dep here but We're hacking the =sys.path= to add it.

*** query libraries

    ideally we should detect what the user's machine has, and query accordingly. Currently we assume you've installed it either via =pip= into the venv or again, use a =sys.path= hack

    - Bio.Entrez
    - CrossRef

** entering your query credentials

*** Bio.Entrez

    set up your email throuh calibre prefences -> Plugins -> config plugin. Without an email, this plugin will not run.

*** CrossRef API key

    get an API key from [[http://crossref.org][crossref.org]] and fill it in the config plugin dialog. Without the API key, this plugin will not run.

* development

** TODO how to add other sources

 currently in the virtualenv: I use =sh GetCitation/plug*.txt=, then 
 
 #+begin_src sh :eval never
 CALIBRE_DEVELOP_FROM=../calibre-src/src calibre-debug -g
 #+end_src

 to start calibre. The venv setup mainly follows my README in [[https://github.com/whacked/CalibrePluginScaleATon][CalibrePluginScaleATon]]


